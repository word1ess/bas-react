import { useRef } from "react";
import { Link } from "react-router-dom";
function ScrambleLink({ linkText }) {
  function getRandomCharacter() {
    const randomIndex = Math.floor(Math.random() * allowedCharacters.length);
    return allowedCharacters[randomIndex];
  }
  function createEventHandler() {
    // üèÉ‚Äç‚ôÇÔ∏è Private variable: Keep track of the event in progress
    let isInProgress = false;

    // üëá Event handler implementation
    return function handleHoverEvent(e) {
      if (isInProgress) {
        return;
      }

      const text = e.target.innerHTML;
      const randomizedText = text.split("").map(getRandomCharacter).join("");
      for (let i = 0; i < text.length; i++) {
        isInProgress = true;

        setTimeout(() => {
          const nextIndex = i + 1;
          e.target.innerHTML = `${text.substring(
            0,
            nextIndex
          )}${randomizedText.substring(nextIndex)}`;

          if (nextIndex === text.length) {
            isInProgress = false;
          }
        }, i * 40);
      }
    };
  }

  let allowedCharacters = [
    "–∞",

    "–±",

    "–≤",

    "–≥",

    "–¥",

    "–µ",

    "—ë",

    "–∂",

    "–∑",

    "–∏",

    "–π",

    "–∫",

    "–ª",

    "–º",

    "–Ω",

    "–æ",
    "–ø",

    "—Ä",

    "—Å",

    "—Ç",

    "—É",

    "—Ñ",

    "—Ö",

    "—Ü",

    "—á",

    "—à",

    "—â",

    "—ä",

    "—ã",
    "—å",

    "—ç",

    "—é",

    "—è",
  ];

  const linkCrambleRef = useRef(null);
  const eventHandler = createEventHandler();
  const eventHandlerReverse = createEventHandler();
  return (
    <Link
      to="#"
      ref={linkCrambleRef}
      onMouseOver={eventHandler}
      onMouseLeave={eventHandler}
    >
      {linkText}
    </Link>
  );
}

export default ScrambleLink;
